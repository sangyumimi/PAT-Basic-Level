#include <stdio.h>
#include <string.h>

int getaa(char *n){//'P'之前'A'的数量
    int i;
    for(i = 0; n[i] == 'A'; i++){}
    return i;
}

int getbb(char *n){//'P'之后'A'的数量
    int i;
    int j;
    for(i = 0; n[i] != 'P'; i++){}
    for(j = 0; n[i+1+j] == 'A'; j++){}
    return j;
}

int getcc(char *n){//'T'之后'A'的数量
    int i;
    int j;
    for(i = 0; n[i] != 'T'; i++){}
    for(j = 0; n[i+1+j] == 'A'; j++){}
    return j;
}

int judge(char *n){
    int j;
    int p = 0;//'P'的数量
    int a = 0;//'A'的数量
    int t = 0;//'T'的数量
    int pposition = 0;
    int tposition = 0;
    for(j = 0; j < strlen(n); j++){
        if(n[j] == 'P'){
            p++;
            pposition = j;
            if(p > 1){
                return 0;
            }
        }
        else if(n[j] == 'T'){
            t++;
            tposition = j;
            if(t > 1){
                return 0;
            }
        }
        else if(n[j] == 'A'){
            a++;
        }
        else{
            return 0;//含有除'P','A','T'之外的字符
        }
    }
    if(!p*t||pposition >= tposition){//'P'或'T'的数量为0
        return 0;
    }
    int aa = getaa(n);
    int bb = getbb(n);
    int cc = getcc(n);
    if(cc - (bb - 1) * aa == aa && (bb > 0)){
        return 1;
    }
    else return 0;
}

int main(int argc, const char * argv[]) {
    int max;//字符串个数
    scanf("%i", &max);
    char input[max][100];
    int output[max];//记录字符串是否是否可以获得“答案正确”，1为YES，0为NO
    int i;
    getchar();//吃掉'\n'
    for(i = 0; i < max; i++){
        gets(input[i]);
        output[i] = judge(input[i]);
    }
    for(i = 0; i < max; i++){
        if(output[i]){
            printf("YES\n");
        }
        if(!output[i]){
            printf("NO\n");
        }
    }
    return 0;
}
